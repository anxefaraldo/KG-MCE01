#N canvas 151 104 979 718 16;
#X obj 0 0 cnv 15 712 37 empty empty Phasor~\,\ tablas\ y\ archivos\ de\ sonido 5 20 0 24 #696969 #ffffff 0;
#X obj 4 45 cnv 15 520 24 empty empty Creación\ y\ procesamiento\ de\ sonido\ con\ Pd 5 11 0 16 #1e1e1e #ffffff 0;
#X obj 534 45 cnv 15 175 24 empty empty anxefaraldo@gmail.com 5 11 0 16 #c8c8c8 #000000 0;
#X obj 17 165 soundfiler;
#X obj 17 107 openpanel;
#X msg 106 168 resize \$1;
#N canvas 0 22 450 278 (subpatch) 0;
#X array fase 65559 float 2;
#X coords 0 1 65559 0 200 75 1 0 0;
#X restore 17 461 graph;
#N canvas 0 22 450 278 (subpatch) 0;
#X array mi-sonido 65559 float 0;
#X coords 0 1 65558 -1 200 150 1 0 0;
#X restore 17 290 graph;
#X obj 503 138 samplerate~;
#X floatatom 503 163 6 0 0 0 - - - 12;
#X obj 520 305 phasor~;
#X obj 503 187 /, f 10;
#X obj 503 108 t b f;
#X obj 503 241 t b f b, f 5;
#X msg 557 277 0;
#X floatatom 503 215 8 0 0 0 - - - 12;
#X msg 17 136 read -resize \$1 mi-sonido;
#X obj 106 196 s fase;
#X msg 17 78 bang;
#X obj 503 337 tabwrite~ fase;
#X floatatom 38 224 11 0 0 0 empty - - 12;
#X obj 520 447 tabread4~ mi-sonido;
#X obj 485 482 out~;
#X text 576 214 f = SR / T;
#X obj 541 364 r duracion-en-puntos;
#X obj 17 246 s duracion-en-puntos;
#X obj 503 78 r duracion-en-puntos;
#X text 557 389 phasor * tamaño de tabla;
#X text 106 77 Revisitamos ahora la lectura de archivos de sonido \, con un método mucho más versatil para la manipulación de sonido almacenado en tablas., f 37;
#X text 187 133 A la izquierda \, utilizamos el método ya presentado para cargar un archivo de sonido en una array., f 30;
#X text 223 264 A continuación \, utilizamos un [phasor~] para reproducir en bucle (como buen oscilador) el archivo fuente. Para ello \, hemos de multiplicar la salida del [phasor~] por la duración en puntos de la tabla con mi-sonido., f 25;
#X text 223 366 [tabread4~] se encarga del resto. Este objeto recibe índices de "x" y retorna valores de "y" (el valor instantáneo de cada uno de los puntos de mi-sonido)., f 25;
#X text 187 178 En la derecha \, utilizamos la duración del archivo de sonido para calcular su DURACIÓN EXPRESADA COMO FRECUENCIA. Para ello \, dividimos la frecuencia de muestreo por la duración en muestras del archivo., f 29;
#X text 223 435 Más adelante veremos cómo este método es enormemente versátil para \, por elemplo \, cambiar el pitch \, la velocidad o la dirección de nuestra muestra., f 24;
#X obj 841 446 numbox~ 8 34 100 #191919 #e1e1e1 10 0 0 0;
#X obj 546 420 numbox~ 5 16 100 #191919 #e1e1e1 10 0 0 0;
#X obj 593 482 numbox~ 4 16 100 #191919 #e1e1e1 10 0 0 0;
#X obj 520 392 *~ 1;
#X connect 3 0 20 0;
#X connect 3 0 5 0 48.................G....LD...vA....CA...f9+++eU....n++++WE...P6++++;
#X connect 3 0 25 0;
#X connect 4 0 16 0;
#X connect 5 0 17 0;
#X connect 8 0 9 0;
#X connect 9 0 11 0;
#X connect 10 0 19 0;
#X connect 10 0 37 0;
#X connect 11 0 15 0;
#X connect 12 0 8 0;
#X connect 12 1 11 1 32.................D....bD....A....GA...DD....;
#X connect 13 0 19 0;
#X connect 13 1 10 0;
#X connect 13 2 14 0 32.................G....XA...vA....V....3.....;
#X connect 14 0 10 1;
#X connect 15 0 13 0;
#X connect 16 0 3 0;
#X connect 18 0 4 0;
#X connect 21 0 22 0;
#X connect 21 0 36 0;
#X connect 21 0 22 1;
#X connect 24 0 37 1;
#X connect 26 0 12 0;
#X connect 37 0 21 0;
#X connect 37 0 35 0;
