#N canvas 827 239 527 327 12;
#X obj 4 4 cnv 15 694 37 empty empty Escalado\ de\ valores\ con\ operaciones\ aritméticas 5 20 0 24 #696969 #ffffff 0;
#X obj 4 46 cnv 15 512 24 empty empty Creación\ y\ procesamiento\ de\ sonido\ con\ Pd 5 11 0 16 #1e1e1e #ffffff 0;
#X obj 523 46 cnv 15 175 24 empty empty anxefaraldo@gmail.com 5 11 0 16 #c8c8c8 #000000 0;
#X text 21 156 1) Convertimos el rango inicial al rango 0-1. [Este rango posee la propiedad de funcionar con exponenciación manteniendo los extremos], f 41;
#X text 26 218 1a) RESTAMOS el valor mínimo del rango inicial (0 en este caso), f 21;
#X text 26 281 1b) DIVIDIMOS por el resultado de restar el valor mínimo del rango inicial al valor máximo del mismo., f 25;
#X text 21 462 3) Por último \, SUMAMOS el valor mínimo del rango final \, para obtener el offset correspondiente., f 31;
#X text 229 311 dataflow / MAX-MIN(rango_inicial);
#X text 260 239 dataflow - MIN(rango_inicial);
#X text 260 477 dataflow + ( MIN(rango_final);
#X obj 514 197 notein;
#X obj 514 240 - 0;
#X obj 514 312 / 127;
#X obj 514 478 + -100;
#X floatatom 514 514 5 0 0 0 - - - 12;
#X floatatom 579 197 5 0 127 0 - - - 12;
#X text 499 156 notas midi (0-127) a decibelios (0 -100), f 18;
#X obj 514 396 * 100;
#X text 171 395 dataflow * (MAX(rango_final) - MIN(rango_final));
#X text 26 357 2) Para escalar \, MULTIPLICAMOS por el resultado del máximo menos el minimo del rango final., f 19;
#X text 14 81 Son muchas las situaciones en que necesitamos convertir un rango numérico en otro \, en una operación que normalmente llamamos "escalado". Si bien hay objetos que realizan estos cálculos automáticamente \, repasamos a continuación la lógica general de este tipo de conversiones \, por orden. Asumimos que \, en la mayoría de los casos \, conocemos los valores mínimo y máximo que nos disponemos a convertir., f 94;
#X text 562 395 (0 - -100);
#X text 562 311 (127 - 0);
#X connect 10 0 11 0;
#X connect 11 0 12 0;
#X connect 12 0 17 0;
#X connect 13 0 14 0;
#X connect 15 0 11 0;
#X connect 17 0 13 0;
