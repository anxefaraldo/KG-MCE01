#N canvas 827 239 527 327 12;
#X obj 0 0 cnv 15 712 37 empty empty Generación\ de\ sonido 5 20 0 24 #696969 #ffffff 0;
#X obj 0 44 cnv 15 532 24 empty empty Creación\ y\ procesamiento\ de\ sonido\ con\ Pd 5 11 0 16 #1e1e1e #ffffff 0;
#X obj 534 46 cnv 15 175 24 empty empty anxefaraldo@gmail.com 5 11 0 16 #c8c8c8 #000000 0;
#X obj 33 110 osc~ 400;
#X obj 168 112 noise~;
#X obj 34 277 *~;
#X obj 525 513 dac~;
#X obj 525 329 catch~ mixbus;
#X obj 525 473 *~;
#X floatatom 33 85 5 0 0 0 - - - 12;
#X obj 34 306 throw~ mixbus;
#X obj 62 243 line~;
#X msg 63 171 0;
#X msg 96 171 0.1;
#X msg 135 171 1;
#X obj 61 210 pack 0 100;
#X obj 168 275 *~;
#X obj 168 304 throw~ mixbus;
#X obj 196 244 line~;
#X obj 196 216 pack 0 100;
#X floatatom 196 162 5 100 0 0 - - - 12;
#X obj 196 189 dbtorms;
#X obj 557 358 hsl 128 17 0 1 0 0 empty empty empty -2 -8 0 10 #191919 #e1e1e1 #e1e1e1 0 1;
#X floatatom 554 384 5 0 0 0 - - - 12;
#X obj 554 436 line~;
#X msg 554 409 \$1 100;
#X text 34 472 el [dac~] es el objeto encargado de comunicarse con la targeta de sonido del sistema. Por defecto \, tiene dos entradas que representan un sistema de reproducción estéreo \, aunque esto puede modificarse para albergar cualquier número de canales de salida., f 67;
#X text 34 391 En este caso \, utilizamos un slider GUI para controlar el volumen de salida manualmente. Aunque veremos más tarde esta grafía \, fíjate como proponemos una reescritura alternativa del código anterior \, en la que un mensaje [\$1 100[ sustituye el [pack 0 100] anterior. El efecto es exactamente el mismo., f 69;
#X text 291 111 Los objetos "clásicos" basicos de generación de sonido se sitúan en el estremo del espectro sonoro: Por una parte \, el objeto [osc~] genera ondas sinusoidales \, mientras que en objeto [noise~] es un generador de ruido blanco., f 57;
#X text 291 181 Ambas estructuras proponen maneras alternativas de control de volumen \, en valores rms y en dBs. Puedes utilizar indistintamente una u otra estrategia \, según te convenga., f 52;
#X text 291 241 El objeto [line~] se encarga de suavizar la interacción entre los flujos de control y de audio. En este caso \, nos permite interactuar con los objetos de control de volumen para generar cambios de volumen suaves \, generando una interpolación de 100 ms entre cada interacción., f 58;
#X text 34 331 el objeto [catch~] recibe de manera no local todos los [throws~] con el mismo argumento ("mixbus" en este ejemplo). De esta manera \, podemos enviar a nuestra targeta de sonido una mezcla de todas nuestras señales digitales., f 69;
#X text 83 83 [osc~] recibe en su inlet izquierdo valores numéricos que interpreta como frecuencias., f 80;
#X text 196 140 vol en dBs;
#X text 57 149 vol fijo en RMS;
#X text 608 383 vol continuo en rms, f 11;
#X connect 3 0 5 0;
#X connect 4 0 16 0;
#X connect 5 0 10 0;
#X connect 7 0 8 0;
#X connect 8 0 6 0;
#X connect 8 0 6 1;
#X connect 9 0 3 0;
#X connect 11 0 5 1;
#X connect 12 0 15 0;
#X connect 13 0 15 0;
#X connect 14 0 15 0;
#X connect 15 0 11 0;
#X connect 16 0 17 0;
#X connect 18 0 16 1;
#X connect 19 0 18 0;
#X connect 20 0 21 0;
#X connect 21 0 19 0;
#X connect 22 0 23 0;
#X connect 23 0 25 0;
#X connect 24 0 8 1;
#X connect 25 0 24 0;
