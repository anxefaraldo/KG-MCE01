#N canvas 827 239 527 327 12;
#X obj 0 0 cnv 15 712 37 empty empty Comunicación\ entre\ objetos\ sin\ conexiones 5 20 0 24 #696969 #ffffff 0;
#X obj 0 44 cnv 15 532 24 empty empty Creación\ y\ procesamiento\ de\ sonido\ con\ Pd 5 11 0 16 #1e1e1e #ffffff 0;
#X obj 534 46 cnv 15 175 24 empty empty anxefaraldo@gmail.com 5 11 0 16 #c8c8c8 #000000 0;
#X obj 16 249 send algo;
#X obj 16 278 receive algo;
#X floatatom 128 311 9 0 0 0 empty - - 16;
#X floatatom 16 311 9 0 0 0 empty - - 16;
#X obj 128 278 r algo;
#X text 104 279 =;
#X text 104 248 =;
#X obj 241 249 hsl 128 17 0 127 0 0 algo empty empty -2 -8 0 10 #e4e4e4 #4d4d4d #373737 0 1;
#X obj 241 281 hsl 128 17 0 127 0 0 empty algo empty -2 -8 0 10 #e4e4e4 #2c4d1a #373737 0 1;
#X floatatom 238 311 9 0 0 0 empty - - 16;
#X floatatom 128 215 9 0 0 0 empty - - 16;
#X floatatom 16 215 9 0 0 0 empty - - 16;
#X floatatom 238 215 9 0 0 0 empty - - 16;
#X obj 128 249 s algo;
#X text 413 298 Entre las propiedades \, podemos configurar los símbolos de envío (s) y recepción (r) \, así como el rango \, las dimensiones \, la etiqueta o el color del objeto., f 37;
#X text 197 279 =;
#X text 197 248 =;
#X obj 14 407 send~ input;
#X obj 14 445 receive~ input, f 13;
#X obj 14 479 numbox~ 4 15 100 #191919 #e1e1e1 10 0 0 0;
#X obj 628 472 numbox~ 4 15 100 #191919 #e1e1e1 10 0 0 0;
#X obj 14 375 numbox~ 4 15 100 #191919 #e1e1e1 10 0 0 0;
#X obj 117 445 receive~ input, f 13;
#X obj 117 479 numbox~ 4 15 100 #191919 #e1e1e1 10 0 0 0;
#X obj 628 370 numbox~ 4 15 100 #191919 #e1e1e1 10 0 0 0;
#X obj 522 370 numbox~ 4 15 100 #191919 #e1e1e1 10 0 0 0;
#X text 103 358 Para señales de audio \, Pd ofrece dos tipos de parejas para realizar conexiones no-locales. [send~ x] y [receive~ x] se utilizan para enviar UNA SOLA señal de audio a múltiples destinos. Dadas las características del reloj de audio \, [send~] crea una memoria temporal exclusiva desde donde los múltiples [receive~] leen la señal de audio., f 60;
#X obj 38 514 cnv 15 553 22 empty empty ¡¡Desde\ Pd\ 0.54.0\ estos\ objetos\ de\ audio\ pueden\ enviar\ señales\ multicanal!! 5 12 0 16 #0064c8 #e1e1e1 0;
#X obj 628 400 throw~ out;
#X obj 522 400 throw~ out;
#X obj 628 438 catch~ out;
#X floatatom 314 311 9 0 0 0 empty algo - 16;
#X floatatom 314 215 9 0 0 0 empty - algo 16;
#X text 11 79 Una de las propiedades de los objetos GUI es que pueden recibir y enviar data sin la necesidad de estar conectados a otros objetos. Esta posibilidad es común a todo el entorno mediante las parejas de objetos [send] y [receive] \, que solo necesitan tener un argumento común (una cadena de caracteres sin espacios \, un "nombre" \, una "dirección") \, para comunicarse entre sí. Estos pares de objetos pueden enviar cualquier tipo de datos (floats \, lists \, symbol \, etc.), f 99;
#X text 13 144 Es importante tener en cuenta que las "direcciones" en Pd son GLOBALES. Eso quiere decir que la misma dirección es compartida en todo el entorno \, y no sólo a nivel patch. Múltiples sends con el mismo argumento enviarán datos a la misma dirección. Múltiples receives con el mismo argumento \, recibirán los mismos datos provenientes de la misma dirección. En TODOS los patches abiertos!, f 99;
#X text 413 214 Los objetos GUI disponen de varias propiedades configurables (En plugdata \, click en el objeto para ver la lista de propiedades en la ventana derecha. En Pd \, click-derecho para abrir un menú con propiedades similares)., f 41;
#X text 215 444 En contraste \, el par [throw~ x] y [catch~ x] aglutinan varias señales [throw~] en un solo [catch~] \, donde se suman. Podemos pensar en esta pareja de objetos como los canales individuales de una mesa de mezclas (múltiples throw~) y el bus de salida (un solo catch~), f 59;
#X connect 4 0 6 0;
#X connect 7 0 5 0;
#X connect 11 0 12 0;
#X connect 13 0 16 0;
#X connect 14 0 3 0;
#X connect 15 0 10 0;
#X connect 21 0 22 0;
#X connect 24 0 20 0;
#X connect 25 0 26 0;
#X connect 27 0 31 0;
#X connect 28 0 32 0;
#X connect 33 0 23 0;
